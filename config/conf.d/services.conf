template Service "generic-service" {
	max_check_attempts = 5
	check_interval = 1m
	retry_interval = 30s
}

template Service "continuous-service" {
	import "generic-service"
	check_interval  = 1m
}

template Service "frequent-service" {
	import "generic-service"
	check_interval  = 1h
}

template Service "infrequent-service" {
	import "generic-service"
	check_interval  = 1d
}

apply Service for (interface => addresses in host.vars.addresses) {
	import "generic-service"
	check_command = "check_rmcpping"
	vars.ipmi_ip = addresses[0]
	assign where interface in ["ipmi0", "idrac0"]
}

function getAddrs(alladdresses, host){
	var out = []
	for(interface => addresses in alladdresses){
		for(address in addresses){
			if(address != host.address && address != host.address6){
				out.add({
					"addr" = address,
					"interface" = interface
				})
			}
		}
	}
	return out
}

apply Service for (address in getAddrs(host.vars.addresses, host)){
	import "generic-service"
	check_command = "ping"
	vars.ping_address = address.addr
	assign where !(address.interface in ["ipmi0", "idrac0"]) && address.addr != host.address && address.addr != host.address6
	name = "PING-" + address.interface + "-" + address.addr
}

apply Service "PING4" {
	import "generic-service"
	check_command = "ping4"
	assign where host.address
}

apply Service "PING6" {
	import "generic-service"
	check_command = "ping6"
	assign where host.address6
}

object Service "DISK-VMS" {
	import "generic-service"
	check_command = "check_disk_vms"
	host_name = "VMS"
}

apply Service "PROCS" {
	import "continuous-service"
	check_command = "check_total_procs"
	assign where host.vars.role in ServerRoles
}

apply Service "ZOMBIE" {
	import "continuous-service"
	check_command = "check_zombie_procs"
	assign where host.vars.role in ServerRoles
}

apply Service "SYSTEMD" {
	import "continuous-service"
	check_command = "check_systemd"
	assign where host.vars.role in ServerRoles
}

apply Service "UNAME" {
	import "continuous-service"
	check_command = "check_uname"
	assign where host.vars.role in ServerRoles
}

apply Service "NRPE" {
	import "continuous-service"
	check_command = "check_nrpe"
	assign where host.vars.role in ServerRoles
}

apply Service "MAILBOX" {
	import "frequent-service"
	check_command = "check_mail"
	assign where host.vars.role in ServerRoles
}

apply Service "LOAD" {
	import "continuous-service"
	check_command = "check_load"
	assign where host.vars.role in ServerRoles
}

apply Service "UPTIME" {
	import "continuous-service"
	check_command = "check_uptime"
	assign where host.vars.role in ServerRoles
}

apply Service "USERS" {
	import "continuous-service"
	check_command = "check_users"
	assign where host.vars.role in ServerRoles
}

apply Service "REBOOT" {
	import "frequent-service"
	check_command = "check_reboot"
	assign where host.vars.role in ServerRoles
}

apply Service "PACKAGES" {
	import "frequent-service"
	check_command = "check_packages"
	assign where host.vars.role in ServerRoles
}

template Service "BACKUP" {
	import "generic-service"
	check_command = "passive"
	check_interval = 1d
	vars.dummy_state = 2
}

apply Service "BACKUP-BACKUP3" {
	import "BACKUP"
	assign where "Backup" in host.vars.tags
}

apply Service "DEBSUMS" {
	import "infrequent-service"
	check_command = "check_debsums"
	assign where host.vars.role in ServerRoles
}

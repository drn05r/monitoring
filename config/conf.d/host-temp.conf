template Host "rack-temperature" {
	check_command = "dummy"

	vars.dummy_text = {{
		var okcount = 0
		var warncount = 0
		var critcount = 0

		var hosts = get_objects(Host)
		var crithosts = ""
		var warnhosts = ""
		var okhosts = ""

		# host at this point refers to the rack's host object
		# put it in rack so we can reuse sensibly later
		var rack = host

		var rackhosts = []
		for (host in hosts) {
			if (host.vars.rack == rack.display_name && host.vars.role in ServerRoles) {
				rackhosts.add(host)
			}
		}

		for(host in rackhosts) {
			var temp = get_service(host, "TEMP")
			if (temp.state == 0) {
				okhosts += host.display_name  + "\n"
				okcount += 1
			} else if (temp.state == 1) {
				warnhosts += host.display_name  + "\n"
				warncount += 1
			} else {
				crithosts += host.display_name  + "\n"
				critcount += 1
			}
		}

		var status = "OK:\n" + okhosts

		var badcount = warncount + critcount
		if (badcount > 1) {
			status = "WARNING:\n" + warnhosts
			if (critcount > 0) {
				status += "CRITICAL:\n" + crithosts
			}
			if (okcount > 0) {
				status += "OK:\n" + okhosts
			}
		}

		var critthreshold = Math.ceil(len(rackhosts) / 2)
		if(badcount > critthreshold){
			status = "CRITICAL:\n" + crithosts
			if (warncount > 0) {
				status += "WARNING:\n" + warnhosts
			}
			if (okcount > 0) {
				status += "OK:\n" + okhosts
			}
		}

		return status
	}}
	vars.dummy_state = {{
		var status = macro("$dummy_text$").split(":")[0]
		if (status == "OK") {
			return 0
		} else if (status == "WARNING") {
			return 1
		} else {
			return 2
		}
	}}
}

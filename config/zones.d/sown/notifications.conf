object NotificationCommand "irc-host-notification" {
	command = [ SOWNScriptsDir + "/irc-notification.sh" ]

	env = {
		NOTIFICATIONTYPE = "$notification.type$"
		HOSTNAME = "$host.name$"
		HOSTSTATE = "$host.state$"
		LASTHOSTSTATE = "$host.last_state$"
		LONGDATETIME = "$host.last_state_up$"
		HOSTOUTPUT = "$host.output$"
		NOTIFICATIONUMBER = "$notification.notification_number$"
	}
}

object NotificationCommand "irc-service-notification" {
	command = [ SOWNScriptsDir + "/irc-notification.sh" ]

	env = {
		NOTIFICATIONTYPE = "$notification.type$"
		SERVICENAME = "$service.name$"
		HOSTNAME = "$host.name$"
		SERVICESTATE = "$service.state$"
		LASTSERVICESTATE = "$service.last_state$"
		LONGDATETIME = "$service.last_state_ok$"
		NOTIFICATIONUMBER = "$notification.notification_number$"
	}
}

template Notification "generic-notification" {
	types = [ Problem, Acknowledgement, Recovery, Custom, FlappingStart, FlappingEnd ]
}

apply Notification "irc" to Host {
	states = [ Up, Down ]
	users = [ "icingaadmin" ]
	import "generic-notification"
	command = "irc-host-notification"
	interval = 24 * 60 * 60
	assign where true
}

apply Notification "irc" to Service {
	states = [ OK, Warning, Critical ]
	users = [ "icingaadmin" ]
	import "generic-notification"
	command = "irc-service-notification"
	interval = 24 * 60 * 60
	assign where true
}
